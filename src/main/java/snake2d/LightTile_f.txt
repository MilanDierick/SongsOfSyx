#version 330 core
uniform vec3 v_tilt = vec3(0.0,0.0,1.0);
uniform vec3 v_color = vec3(1.0,1.0,1.0);
uniform sampler2D Tdiffuse;
uniform sampler2D Tnormal;
in vec2 vSampler;
in float vIntensity;
layout(location = 0) out vec4 fragColor;
vec4 texColor;
vec3 normal;
float dottis;
void main(){
texColor = texture(Tdiffuse, vSampler);
if (texColor.w <= 0.0){discard; return;}
normal = texture(Tnormal, vSampler).rgb;
normal *= 2.0;
normal -= 1.0;
dottis = dot(normal.rgb, v_tilt)*vIntensity;if (dottis > 0.0){
fragColor.rgb = texColor.rgb*dottis*v_color.rgb;
}else{
discard;
}
}